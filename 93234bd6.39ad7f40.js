(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{100:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return b}));var a=n(2),l=n(7),r=(n(0),n(124)),i={id:"docker",title:"FlexIt Docker Deployment",hide_title:!0,sidebar_label:"Docker (Linux)"},o={unversionedId:"docker",id:"docker",isDocsHomePage:!1,title:"FlexIt Docker Deployment",description:"Deploy FlexIt",source:"@site/docs/docker.md",slug:"/docker",permalink:"/docs/docker",editUrl:"https://github.com/flexanalytics/flexit-docs/edit/master/docs/docker.md",version:"current",sidebar_label:"Docker (Linux)",sidebar:"docs",previous:{title:"FlexIt Deployment",permalink:"/docs/deploy"},next:{title:"FlexIt Docker Deployment",permalink:"/docs/docker-windows"}},c=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Deployment Options",id:"deployment-options",children:[{value:"Required Containers",id:"required-containers",children:[]}]},{value:"Installation Instructions",id:"installation-instructions",children:[{value:"1. Clone the Repository",id:"1-clone-the-repository",children:[]},{value:"2. Configure Environment Variables",id:"2-configure-environment-variables",children:[]}]},{value:"Installation and Setup",id:"installation-and-setup",children:[{value:"Installing for the first time",id:"installing-for-the-first-time",children:[]},{value:"Access FlexIt",id:"access-flexit",children:[]}]},{value:"Managing the Docker Containers",id:"managing-the-docker-containers",children:[{value:"Stopping the Application",id:"stopping-the-application",children:[]},{value:"Starting the Application",id:"starting-the-application",children:[]},{value:"Restarting the Application",id:"restarting-the-application",children:[]},{value:"Deploying the Application",id:"deploying-the-application",children:[]}]},{value:"Cleaning up artifacts to free up space",id:"cleaning-up-artifacts-to-free-up-space",children:[{value:"stop all containers",id:"stop-all-containers",children:[]},{value:"delete all containers",id:"delete-all-containers",children:[]},{value:"delete all images",id:"delete-all-images",children:[]},{value:"prune to clear up space",id:"prune-to-clear-up-space",children:[]}]},{value:"Working with Volumes",id:"working-with-volumes",children:[]},{value:"Additional Notes",id:"additional-notes",children:[{value:"Viewing Logs",id:"viewing-logs",children:[]}]},{value:"Troubleshooting",id:"troubleshooting",children:[{value:"1. PostgreSQL Connection Issues",id:"1-postgresql-connection-issues",children:[]},{value:"2. Nginx Not Forwarding Requests",id:"2-nginx-not-forwarding-requests",children:[]},{value:"3. FlexIt Frontend Not Starting",id:"3-flexit-frontend-not-starting",children:[]}]}],s={rightToc:c};function b(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"deploy-flexit"},"Deploy FlexIt"),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/flexanalytics/flexit-docker-linux"}),"This repository")," provides everything needed to deploy FlexIt using Docker."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"For Windows Installation see ",Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"/docs/docker-windows"}),"this guide"))),Object(r.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(r.b)("p",null,"Ensure you have ",Object(r.b)("inlineCode",{parentName:"p"},"sudo")," access and the following are installed on your machine:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.docker.com/get-docker/"}),"Docker")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.docker.com/compose/install/"}),"Docker Compose"))),Object(r.b)("h2",{id:"deployment-options"},"Deployment Options"),Object(r.b)("p",null,"This repository allows for the following deployment options:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"With all containers"),": FlexIt Frontend, PostgreSQL backend, and Nginx for reverse proxy management."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Without PostgreSQL"),": Use an external content database while deploying the FlexIt Frontend (and optionally Nginx)."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Without Nginx"),": Directly expose the FlexIt Frontend without a reverse proxy (with or without a content database).")),Object(r.b)("h3",{id:"required-containers"},"Required Containers"),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"FlexIt Analytics")," (",Object(r.b)("inlineCode",{parentName:"p"},"flexit-analytics"),") container is the only mandatory container. All other containers are optional based on your setup."),Object(r.b)("h2",{id:"installation-instructions"},"Installation Instructions"),Object(r.b)("h3",{id:"1-clone-the-repository"},"1. Clone the Repository"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git clone https://github.com/flexanalytics/flexit-docker-linux.git\ncd flexit-docker-linux\n")),Object(r.b)("h3",{id:"2-configure-environment-variables"},"2. Configure Environment Variables"),Object(r.b)("p",null,"Rename the ",Object(r.b)("inlineCode",{parentName:"p"},".env.template")," file to ",Object(r.b)("inlineCode",{parentName:"p"},".env")," and update the following:"),Object(r.b)("p",null,"backend database credentials:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"## --backend database credentials-- ##\nDB_USER=\nDB_PASSWORD=\nDB_NAME=\nDB_PORT=5432\n")),Object(r.b)("p",null,"frontend app configuration (optional, defaults are provided):"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"## --frontend app port number-- ##\nFLEXIT_PORT=3030\nFLEXIT_VERSION=latest\n")),Object(r.b)("p",null,"webserver setup (optional if using Nginx and ssl for external access):"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"## -- nginx setup -- ##\nUSE_NGINX=true\n# domain where your site will be available\nPUBLIC_DNS='<your_public_dns>'\n# should certs be managed automatically?\nAUTO_MANAGE_CERTS=false\n# path where .crt and .key files are stored\nCERT_PATH=/etc/nginx/ssl\n# email for certificate authority\nCERT_EMAIL='<your_email>''\n# https port (443 is default and standard)\nNGINX_HTTPS_PORT=443\n# http port (80 is default and standard)\nNGINX_HTTP_PORT=80\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"Note"),":"),Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},"If you are using an external content database, you will be prompted to set up the database credentials upon creating your account."))),Object(r.b)("h2",{id:"installation-and-setup"},"Installation and Setup"),Object(r.b)("h3",{id:"installing-for-the-first-time"},"Installing for the first time"),Object(r.b)("p",null,"Run the following command in an Administrator PowerShell:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"./install.sh\n")),Object(r.b)("p",null,"This command will prompt you to configure your content database, build the images, and start the container(s)."),Object(r.b)("h3",{id:"access-flexit"},"Access FlexIt"),Object(r.b)("p",null,"Visit the application at:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Without Nginx"),": ",Object(r.b)("inlineCode",{parentName:"p"},"http://localhost:<FLEXIT_PORT>"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"With Nginx"),": ",Object(r.b)("inlineCode",{parentName:"p"},"http://<PUBLIC_DNS>")),Object(r.b)("p",{parentName:"li"},"See here for how to ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"administration#https"}),"ensure your DNS is correctly configured"),"."))),Object(r.b)("h2",{id:"managing-the-docker-containers"},"Managing the Docker Containers"),Object(r.b)("h3",{id:"stopping-the-application"},"Stopping the Application"),Object(r.b)("p",null,"To stop the application:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"./scripts/stop_server.sh\n")),Object(r.b)("h3",{id:"starting-the-application"},"Starting the Application"),Object(r.b)("p",null,"To start the application:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"./scripts/start_server.sh\n")),Object(r.b)("h3",{id:"restarting-the-application"},"Restarting the Application"),Object(r.b)("p",null,"To pull the latest changes from an upstream repo and restart the application:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"./scripts/restart_server.sh\n")),Object(r.b)("h3",{id:"deploying-the-application"},"Deploying the Application"),Object(r.b)("p",null,"To deploy the application with custom files in the ",Object(r.b)("inlineCode",{parentName:"p"},"volumes")," directory, including pulling changes and restarting, run:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"./scripts/deploy_server.sh\n")),Object(r.b)("h2",{id:"cleaning-up-artifacts-to-free-up-space"},"Cleaning up artifacts to free up space"),Object(r.b)("p",null,"This section provides commands to clean up Docker artifacts, including containers and images."),Object(r.b)("h3",{id:"stop-all-containers"},"stop all containers"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"sudo docker stop $(sudo docker ps -aq)\n")),Object(r.b)("p",null,"This command will stop all running containers in your local Docker environment. Be cautious, as this will stop all containers, including those not related to this project."),Object(r.b)("h3",{id:"delete-all-containers"},"delete all containers"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"sudo docker rm $(sudo docker ps -aq)\n")),Object(r.b)("p",null,"This command will remove all containers from your local Docker environment. Be cautious, as this will delete all containers, including those not related to this project."),Object(r.b)("h3",{id:"delete-all-images"},"delete all images"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"sudo docker rmi $(sudo docker images -q)\n")),Object(r.b)("p",null,"This command will remove all images from your local Docker environment. Be cautious, as this will delete all images, including those not related to this project."),Object(r.b)("h3",{id:"prune-to-clear-up-space"},"prune to clear up space"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"sudo docker system prune -af\n")),Object(r.b)("p",null,"This command will remove all stopped containers, unused networks, dangling images, and build cache."),Object(r.b)("p",null,"To remove only unused images:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"sudo docker image prune -a\n")),Object(r.b)("p",null,"To remove unused containers:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"sudo docker container prune\n")),Object(r.b)("p",null,"To remove unused networks:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"sudo docker network prune\n")),Object(r.b)("p",null,"To remove unused build cache:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"sudo docker builder prune\n")),Object(r.b)("h2",{id:"working-with-volumes"},"Working with Volumes"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"docker-compose.yml")," file uses named volumes to persist data. These volumes are created automatically when you run the application and will persist between container restarts."),Object(r.b)("p",null,"For example:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"volumes:\n  - flexit_webcontent:/opt/flexit/webcontent\n")),Object(r.b)("p",null,"This creates a named volume called ",Object(r.b)("inlineCode",{parentName:"p"},"flexit_webcontent")," that is used by the ",Object(r.b)("inlineCode",{parentName:"p"},"flexit-analytics")," service and is mapped to the ",Object(r.b)("inlineCode",{parentName:"p"},"/opt/flexit/webcontent")," directory in the container. This volume is owned by root and is not accessible by the user running the container. If you need to access or modify the data in this volume, you can use the ",Object(r.b)("inlineCode",{parentName:"p"},"docker cp")," command to copy files to the container from your local machine (or vice/versa). ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/reference/cli/docker/container/cp/"}),"Further documentation from Docker here")),Object(r.b)("p",null,"For example, to copy a file.txt file from your local machine to the ",Object(r.b)("inlineCode",{parentName:"p"},"flexit_webcontent")," volume in the ",Object(r.b)("inlineCode",{parentName:"p"},"flexit-analytics")," container:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"sudo docker cp file.txt flexit-analytics:/opt/flexit/webcontent/file.txt\n")),Object(r.b)("p",null,"You can also get into the container's shell directly to move around the filesystem if needed:"),Object(r.b)("p",null,"run bash from within the container (linux):"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"sudo docker exec -it flexit-analytics /bin/bash\n")),Object(r.b)("p",null,"To view the volumes:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"sudo docker volume ls\n")),Object(r.b)("p",null,"To inspect a specific volume:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"sudo docker volume inspect <volume_name>\n")),Object(r.b)("h2",{id:"additional-notes"},"Additional Notes"),Object(r.b)("h3",{id:"viewing-logs"},"Viewing Logs"),Object(r.b)("p",null,"To view logs for the FlexIt Frontend:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"sudo docker logs <container_name>\n")),Object(r.b)("h2",{id:"troubleshooting"},"Troubleshooting"),Object(r.b)("h3",{id:"1-postgresql-connection-issues"},"1. PostgreSQL Connection Issues"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Ensure the ",Object(r.b)("inlineCode",{parentName:"li"},"DB_USER"),", ",Object(r.b)("inlineCode",{parentName:"li"},"DB_PASSWORD"),", and ",Object(r.b)("inlineCode",{parentName:"li"},"DB_NAME")," in ",Object(r.b)("inlineCode",{parentName:"li"},".env")," match the values expected by the PostgreSQL server.")),Object(r.b)("h3",{id:"2-nginx-not-forwarding-requests"},"2. Nginx Not Forwarding Requests"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Check that the ",Object(r.b)("inlineCode",{parentName:"li"},"PUBLIC_DNS")," in ",Object(r.b)("inlineCode",{parentName:"li"},".env")," matches your actual DNS or hostname."),Object(r.b)("li",{parentName:"ul"},"Ensure no other service is using the Nginx port (default: ",Object(r.b)("inlineCode",{parentName:"li"},"80")," or ",Object(r.b)("inlineCode",{parentName:"li"},"NGINX_PORT"),").")),Object(r.b)("h3",{id:"3-flexit-frontend-not-starting"},"3. FlexIt Frontend Not Starting"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Review logs:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker logs flexit-frontend\n")))))}b.isMDXComponent=!0},124:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),l=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=l.a.createContext({}),b=function(e){var t=l.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=b(e.components);return l.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},d=l.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=b(n),d=a,m=p["".concat(i,".").concat(d)]||p[d]||u[d]||r;return n?l.a.createElement(m,o(o({ref:t},s),{},{components:n})):l.a.createElement(m,o({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var s=2;s<r;s++)i[s]=n[s];return l.a.createElement.apply(null,i)}return l.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);
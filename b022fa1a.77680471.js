(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{118:function(e,t,a){"use strict";a.d(t,"a",(function(){return l})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=r.a.createContext({}),p=function(e){var t=r.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},l=function(e){var t=p(e.components);return r.a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,o=e.parentName,i=b(e,["components","mdxType","originalType","parentName"]),l=p(a),m=n,u=l["".concat(o,".").concat(m)]||l[m]||d[m]||c;return a?r.a.createElement(u,s(s({ref:t},i),{},{components:a})):r.a.createElement(u,s({ref:t},i))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,o=new Array(c);o[0]=m;var s={};for(var b in t)hasOwnProperty.call(t,b)&&(s[b]=t[b]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var i=2;i<c;i++)o[i]=a[i];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},92:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return p}));var n=a(2),r=a(7),c=(a(0),a(118)),o={title:"Intro to dbt Business Intelligence",hide_title:!0,sidebar_label:"Introduction"},s={unversionedId:"dbt/introduction",id:"dbt/introduction",isDocsHomePage:!1,title:"Intro to dbt Business Intelligence",description:"dbt Business Intelligence",source:"@site/docs\\dbt\\introduction.md",slug:"/dbt/introduction",permalink:"/docs/dbt/introduction",editUrl:"https://github.com/ataft/flexit-docs/edit/master/docs/dbt/introduction.md",version:"current",sidebar_label:"Introduction"},b=[{value:"dbt Concepts",id:"dbt-concepts",children:[]},{value:"Business Intelligence Concepts",id:"business-intelligence-concepts",children:[]}],i={rightToc:b};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"dbt-business-intelligence"},"dbt Business Intelligence"),Object(c.b)("p",null,"This guide will show you how to use ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://getdbt.com"}),"dbt")," to create a multi-dimensional data warehouse and then enable metadata-less business intelligence (BI) using the ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://flexitanalytics.com"}),"FlexIt Analytics")," enterprise BI platform."),Object(c.b)("h2",{id:"dbt-concepts"},"dbt Concepts"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Database agnostic")," - how to use macros and packages to create models that work across database platforms")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Multi-dimensional Modeling")," - how to create multi-dimensional star schema models")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Date Dimension")," - build a database agnostic date dimension using the ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/calogica/dbt-date#get_date_dimensionstart_date-end_date"}),Object(c.b)("inlineCode",{parentName:"a"},"dbt-date"))," package.")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Metrics")," - how to define ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.getdbt.com/docs/building-a-dbt-project/metrics"}),"Metrics"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Metrics Package")," - how to use the ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/dbt-labs/dbt_metrics"}),"dbt_metrics")," package to generate queries.")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Meta")," - using the ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.getdbt.com/reference/resource-configs/meta"}),"meta config")," for downstream BI tools to handle joins, formatting, aliases, model and column order, hide/display columns and models, and more")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Tests")," - how to use singular and generic ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.getdbt.com/docs/building-a-dbt-project/tests"}),"tests"),", including relationships tests for referential integrity")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Packages")," - using packages such as ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/calogica/dbt-date#get_date_dimensionstart_date-end_date"}),Object(c.b)("inlineCode",{parentName:"a"},"dbt-date"))," and ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/dbt-labs/dbt-utils"}),Object(c.b)("inlineCode",{parentName:"a"},"dbt-utils")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Jinja & Macros")," - using ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.getdbt.com/docs/building-a-dbt-project/jinja-macros"}),"Jinja & Macros")," to create re-usable code")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Seeds")," - use ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.getdbt.com/docs/building-a-dbt-project/seeds"}),"Seeds")," to load source data into the data warehouse")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Exposures")," - document downstream model dependencies, such as reports and dashboards, using ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.getdbt.com/docs/building-a-dbt-project/exposures"}),"Exposures"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Custom Schemas")," - how to use ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.getdbt.com/docs/building-a-dbt-project/building-models/using-custom-schemas"}),"Custom Schemas")," to organize models (e.g. staging tables)")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Documentation"),"  - ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.getdbt.com/docs/building-a-dbt-project/documentation"}),"documenting dbt models")," for optimized downstream discovery in BI tools")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Sources")," - defining ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.getdbt.com/docs/building-a-dbt-project/using-sources"}),"Sources")," and using the source freshness features")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Snapshots")," - use ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.getdbt.com/docs/building-a-dbt-project/snapshots"}),"Snapshots")," to maintain a history of record changes in a table over time")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Pre-hook & Post-hook")," - use ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.getdbt.com/reference/resource-configs/pre-hook-post-hook"}),"post-hooks")," to run SQL after a model is built. For example, to create indexes, primary/foreign keys, grant permissions.")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Best Practices")," - follow ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.getdbt.com/docs/guides/best-practices"}),"dbt Best Practices")))),Object(c.b)("h2",{id:"business-intelligence-concepts"},"Business Intelligence Concepts"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Metadata-less BI")," - bypass defining metadata models at the BI semantic layer")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Data Literacy")," - create a full data dictionary with source controlled definitions using dbt documentation")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Lineage")," - instantly see upstream model and source dependencies with the ability to run upstream SQL")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Joins")," - entity relationships defined by dbt tests ",Object(c.b)("inlineCode",{parentName:"p"},"relationships")," or model ",Object(c.b)("inlineCode",{parentName:"p"},"meta"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Data Freshness")," - from reports and models, view model refresh date/time and source data freshness")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Metrics")," - use dbt Metrics for complex calculations and aggregation")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Natural Language Query (NLQ)")," - define model ",Object(c.b)("inlineCode",{parentName:"p"},"meta.synonyms")," (a.k.a aliases) to be used by natural language query or generic searching")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Report dependencies")," - define model dependencies for reports and dashboards using Exposures")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Formatting")," - define universal formatting for number, string, date and other data types"))))}p.isMDXComponent=!0}}]);
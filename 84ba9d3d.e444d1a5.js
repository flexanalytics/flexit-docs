(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{123:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),l=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=l.a.createContext({}),b=function(e){var t=l.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=b(e.components);return l.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},u=l.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,r=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=b(n),u=a,m=p["".concat(r,".").concat(u)]||p[u]||d[u]||o;return n?l.a.createElement(m,i(i({ref:t},s),{},{components:n})):l.a.createElement(m,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,r[1]=i;for(var s=2;s<o;s++)r[s]=n[s];return l.a.createElement.apply(null,r)}return l.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},98:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return b}));var a=n(2),l=n(7),o=(n(0),n(123)),r={id:"docker-windows",title:"FlexIt Docker Deployment",hide_title:!0,sidebar_label:"Docker (Windows Containers)"},i={unversionedId:"docker-windows",id:"docker-windows",isDocsHomePage:!1,title:"FlexIt Docker Deployment",description:"Deploy FlexIt",source:"@site/docs/docker-windows.md",slug:"/docker-windows",permalink:"/docs/docker-windows",editUrl:"https://github.com/flexanalytics/flexit-docs/edit/master/docs/docker-windows.md",version:"current",sidebar_label:"Docker (Windows Containers)",sidebar:"docs",previous:{title:"FlexIt Docker Deployment",permalink:"/docs/docker"},next:{title:"FlexIt Cloud Deployment",permalink:"/docs/cloud"}},c=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Deployment Options",id:"deployment-options",children:[{value:"Required Containers",id:"required-containers",children:[]}]},{value:"Installation Instructions",id:"installation-instructions",children:[{value:"1. Clone the Repository",id:"1-clone-the-repository",children:[]},{value:"2. Configure Environment Variables",id:"2-configure-environment-variables",children:[]}]},{value:"Installation and Setup",id:"installation-and-setup",children:[{value:"Installing for the first time",id:"installing-for-the-first-time",children:[]},{value:"Access FlexIt",id:"access-flexit",children:[]}]},{value:"Managing the Docker Containers",id:"managing-the-docker-containers",children:[{value:"Stopping the Application",id:"stopping-the-application",children:[]},{value:"Starting the Application",id:"starting-the-application",children:[]},{value:"Restarting the Application",id:"restarting-the-application",children:[]}]},{value:"Cleaning up artifacts to free up space",id:"cleaning-up-artifacts-to-free-up-space",children:[{value:"stop all containers",id:"stop-all-containers",children:[]},{value:"delete all containers",id:"delete-all-containers",children:[]},{value:"delete all images",id:"delete-all-images",children:[]},{value:"prune to clear up space",id:"prune-to-clear-up-space",children:[]}]},{value:"Working with Volumes",id:"working-with-volumes",children:[]},{value:"Additional Notes",id:"additional-notes",children:[{value:"Viewing Logs",id:"viewing-logs",children:[]}]},{value:"Troubleshooting",id:"troubleshooting",children:[{value:"1. PostgreSQL Connection Issues",id:"1-postgresql-connection-issues",children:[]},{value:"2. FlexIt Frontend Not Starting",id:"2-flexit-frontend-not-starting",children:[]}]}],s={rightToc:c};function b(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"deploy-flexit"},"Deploy FlexIt"),Object(o.b)("p",null,Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/flexanalytics/flexit-docker-windows"}),"This repository")," provides everything needed to deploy FlexIt using Docker."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"For Linux Installation see ",Object(o.b)("a",Object(a.a)({parentName:"strong"},{href:"/docs/docker"}),"this guide"))),Object(o.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(o.b)("p",null,"Ensure you are able to run PowerShell as Administrator.\nWindows containers only run on Windows 10 or Windows Server 2022 and later."),Object(o.b)("h2",{id:"deployment-options"},"Deployment Options"),Object(o.b)("p",null,"This repository allows for the following deployment options:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"With all containers"),": FlexIt Frontend and PostgreSQL backend."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Without PostgreSQL"),": Use an external content database while deploying the FlexIt Frontend.")),Object(o.b)("h3",{id:"required-containers"},"Required Containers"),Object(o.b)("p",null,"The ",Object(o.b)("strong",{parentName:"p"},"FlexIt Analytics")," (",Object(o.b)("inlineCode",{parentName:"p"},"flexit-analytics"),") container is the only mandatory container. All other containers are optional based on your setup."),Object(o.b)("h2",{id:"installation-instructions"},"Installation Instructions"),Object(o.b)("h3",{id:"1-clone-the-repository"},"1. Clone the Repository"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git clone https://github.com/flexanalytics/flexit-docker-windows.git\ncd flexit-docker-windows\n")),Object(o.b)("h3",{id:"2-configure-environment-variables"},"2. Configure Environment Variables"),Object(o.b)("p",null,"Rename the ",Object(o.b)("inlineCode",{parentName:"p"},".env.template")," file to ",Object(o.b)("inlineCode",{parentName:"p"},".env")," and update the following:"),Object(o.b)("p",null,"frontend app configuration (modification in optional, the below defaults are provided):"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-env"}),"## --frontend app port number-- ##\nFLEXIT_PORT=3030\nFLEXIT_VERSION=latest\n")),Object(o.b)("p",null,"backend database configuration (add credentials for the containerized PostgreSQL database):"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"If you are using an external content database, set the ",Object(o.b)("inlineCode",{parentName:"p"},"USE_CONTENT_DB_CONTAINER")," variable to ",Object(o.b)("inlineCode",{parentName:"p"},"false"),".")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-env"}),"## --backend database credentials-- ##\nUSE_CONTENT_DB_CONTAINER=true\nCONTENT_DB_VERSION=latest\nDB_USER=''\nDB_PASSWORD=''\nDB_NAME=''\nDB_PORT=5432\n")),Object(o.b)("p",null,"Ensure the image tag in the ",Object(o.b)("inlineCode",{parentName:"p"},"Dockerfile")," matches the version of Windows you are using. The default is ",Object(o.b)("inlineCode",{parentName:"p"},"windows-ltsc2022"),"."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"Note"),":"),Object(o.b)("ul",{parentName:"blockquote"},Object(o.b)("li",{parentName:"ul"},"If you are using an external content database, you will be prompted to set up the database credentials upon creating your account in FlexIt."))),Object(o.b)("h2",{id:"installation-and-setup"},"Installation and Setup"),Object(o.b)("h3",{id:"installing-for-the-first-time"},"Installing for the first time"),Object(o.b)("p",null,"Run the following command in an Administrator PowerShell:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),".\\install.ps1\n")),Object(o.b)("p",null,"This command will install docker and docker-compose if not already installed, build the images, and start the container(s)."),Object(o.b)("h3",{id:"access-flexit"},"Access FlexIt"),Object(o.b)("p",null,"Visit the application at:"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"http://localhost:<FLEXIT_PORT>")),Object(o.b)("p",null,"See here for how to ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"administration#https"}),"configure your DNS"),"."),Object(o.b)("h2",{id:"managing-the-docker-containers"},"Managing the Docker Containers"),Object(o.b)("h3",{id:"stopping-the-application"},"Stopping the Application"),Object(o.b)("p",null,"To stop the application:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),".\\scripts\\stop_server.bat\n")),Object(o.b)("h3",{id:"starting-the-application"},"Starting the Application"),Object(o.b)("p",null,"To start the application:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),".\\scripts\\start_server.bat\n")),Object(o.b)("h3",{id:"restarting-the-application"},"Restarting the Application"),Object(o.b)("p",null,"To pull the latest changes from an upstream repo and restart the application:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),".\\scripts\\restart_server.bat\n")),Object(o.b)("h2",{id:"cleaning-up-artifacts-to-free-up-space"},"Cleaning up artifacts to free up space"),Object(o.b)("p",null,"This section provides commands to clean up Docker artifacts, including containers and images."),Object(o.b)("h3",{id:"stop-all-containers"},"stop all containers"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker stop $(docker ps -aq)\n")),Object(o.b)("p",null,"This command will stop all running containers in your local Docker environment. Be cautious, as this will stop all containers, including those not related to this project."),Object(o.b)("h3",{id:"delete-all-containers"},"delete all containers"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker rm $(docker ps -aq)\n")),Object(o.b)("p",null,"This command will remove all containers from your local Docker environment. Be cautious, as this will delete all containers, including those not related to this project."),Object(o.b)("h3",{id:"delete-all-images"},"delete all images"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker rmi $(docker images -q)\n")),Object(o.b)("p",null,"This command will remove all images from your local Docker environment. Be cautious, as this will delete all images, including those not related to this project."),Object(o.b)("h3",{id:"prune-to-clear-up-space"},"prune to clear up space"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker system prune -af\n")),Object(o.b)("p",null,"This command will remove all stopped containers, unused networks, dangling images, and build cache."),Object(o.b)("p",null,"To remove only unused images:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker image prune -a\n")),Object(o.b)("p",null,"To remove unused containers:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker container prune\n")),Object(o.b)("p",null,"To remove unused networks:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker network prune\n")),Object(o.b)("p",null,"To remove unused build cache:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker builder prune\n")),Object(o.b)("h2",{id:"working-with-volumes"},"Working with Volumes"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"docker-compose.yml")," file uses named volumes to persist data. These volumes are created automatically when you run the application and will persist between container restarts."),Object(o.b)("p",null,"For example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"volumes:\n  - flexit_webcontent:/opt/flexit/webcontent\n")),Object(o.b)("p",null,"This creates a named volume called ",Object(o.b)("inlineCode",{parentName:"p"},"flexit_webcontent")," that is used by the ",Object(o.b)("inlineCode",{parentName:"p"},"flexit-analytics")," service and is mapped to the ",Object(o.b)("inlineCode",{parentName:"p"},"/opt/flexit/webcontent")," directory in the container. This volume is owned by root and is not accessible by the user running the container. If you need to access or modify the data in this volume, you can use the ",Object(o.b)("inlineCode",{parentName:"p"},"docker cp")," command to copy files to the container from your local machine (or vice/versa). ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/reference/cli/docker/container/cp/"}),"Further documentation from Docker here")),Object(o.b)("p",null,"For example, to copy a file.txt file from your local machine to the ",Object(o.b)("inlineCode",{parentName:"p"},"flexit_webcontent")," volume in the ",Object(o.b)("inlineCode",{parentName:"p"},"flexit-analytics")," container:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker cp file.txt flexit-analytics:/opt/flexit/webcontent/file.txt\n")),Object(o.b)("p",null,"You can also get into the container's shell directly to move around the filesystem if needed:"),Object(o.b)("p",null,"run bash from within the container (linux):"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker exec -it flexit-analytics /bin/bash\n")),Object(o.b)("p",null,"To view the volumes:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker volume ls\n")),Object(o.b)("p",null,"To inspect a specific volume:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker volume inspect <volume_name>\n")),Object(o.b)("h2",{id:"additional-notes"},"Additional Notes"),Object(o.b)("h3",{id:"viewing-logs"},"Viewing Logs"),Object(o.b)("p",null,"To view logs for the a container:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker logs <container_name>\n")),Object(o.b)("h2",{id:"troubleshooting"},"Troubleshooting"),Object(o.b)("h3",{id:"1-postgresql-connection-issues"},"1. PostgreSQL Connection Issues"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Ensure the ",Object(o.b)("inlineCode",{parentName:"li"},"DB_USER"),", ",Object(o.b)("inlineCode",{parentName:"li"},"DB_PASSWORD"),", and ",Object(o.b)("inlineCode",{parentName:"li"},"DB_NAME")," in ",Object(o.b)("inlineCode",{parentName:"li"},".env")," match the values expected by the PostgreSQL server.")),Object(o.b)("h3",{id:"2-flexit-frontend-not-starting"},"2. FlexIt Frontend Not Starting"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Review logs:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker logs flexit-frontend\n")))))}b.isMDXComponent=!0}}]);